<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shiyi.mapper.UserMapper">
    <insert id="insertBackId" keyProperty="id" useGeneratedKeys="true">
        insert into b_user(username,password,nick_name,avatar,pwd,created_time) values(#{username},#{password},#{nickName}
        ,#{avatar},#{pwd},#{createdTime})
    </insert>

    <select id="getMenuId" resultType="java.lang.Integer">
        select menu_id from b_role_menu where role_id =
           (select role_id from b_user where  id=#{userId})
    </select>

    <select id="selectPageRecord" resultType="com.shiyi.vo.SystemUserInfoVO">
        select a.id,b.avatar,b.nickname,a.login_type,a.role_id,a.ip_address,a.ip_source,a.last_login_time,a.create_time,a.status from b_user a left join (select id,avatar,nickname from b_user_info) b on a.user_info_id=b.id
        <where>
            <if test="username != null and username != ''">
                b.nickname like concat('%',#{username},'%')
            </if>
            <if test="loginType != null and loginType != ''">
                and a.login_type=#{loginType}
            </if>
        </where>
        order by a.create_time asc
    </select>

    <select id="getById" resultType="com.shiyi.vo.SystemUserVO">
        select a.id,a.username,a.role_id,a.status,b.nickname,b.avatar from b_user a left join (select id,nickname,avatar from b_user_info) b on a.user_info_id=b.id
        where a.id = #{id}
    </select>

    <select id="selectNameAndPassword" resultType="com.shiyi.entity.User">
        select a.id,a.username,a.role_id,a.status,b.nickname,b.avatar,a.user_info_id from b_user a left join (select id,nickname,avatar from b_user_info) b on a.user_info_id=b.id
        where a.username=#{username} and a.password=#{password}
    </select>

    <select id="selectByUserName" resultType="com.shiyi.vo.UserInfoVO">
        select a.id,a.login_type,a.status,b.nickname,b.avatar,b.email,b.intro,b.web_site from b_user a
            left join (select id,nickname,avatar,email,intro,web_site from b_user_info) b on a.user_info_id=b.id
        where username=#{username}
    </select>
    <select id="selectInfoByUserId" resultType="com.shiyi.vo.UserInfoVO">
        SELECT
            u.id,
            ui.nickname,
            ui.avatar,
            ui.intro,
            ui.web_site,
            ui.bj_cover,
            count( DISTINCT a.id ) AS articleCount,
            count( DISTINCT fans.id ) AS fansCount,
            count( DISTINCT watch.id ) AS watchCount
        FROM
            b_user u
                LEFT JOIN b_user_info ui ON u.user_info_id = ui.id
                LEFT JOIN b_article a ON u.id = a.user_id
                LEFT JOIN b_followed fans on fans.followed_user_id = u.id
                LEFT JOIN b_followed watch on watch.user_id = u.id
        WHERE u.id = #{userId} group by u.id
    </select>

    <select id="selectInfoByUserIdTwo" resultType="com.shiyi.vo.UserInfoVO">
        SELECT
            u.id,
            ui.nickname,
            ui.avatar,
            ui.intro,
            ui.web_site,
            ui.bj_cover
        FROM
            b_user u
                LEFT JOIN b_user_info ui ON u.user_info_id = ui.id
        WHERE u.id = #{userId} group by u.id
    </select>

    <select id="selectInfoByUserIdNew" resultType="com.shiyi.vo.UserInfoVO">
        SELECT
            u.id,
            u.user_info_id,
            ui.nickname,
            ui.avatar,
            ui.intro,
            ui.web_site,
            ui.bj_cover
        FROM
            b_user u
                LEFT JOIN b_user_info ui ON u.user_info_id = ui.id
        WHERE u.id = #{userId} group by u.id
    </select>

    <update id="updateLoginInfo">
        update b_user set last_login_time = now(),ip_address=#{ip},ip_source=#{cityInfo},os=#{os},browser=#{browser} where id=#{loginId}
    </update>

</mapper>
